# This will disable the top bars
# for_window [class="^.*"] border pixel 1
for_window [class="^.*"] border pixel 8

set $mod Mod4
set $alt Mod1
set $modcode 133

bindsym $mod+Shift+z exec i3lock -c 00aaff

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 18

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec "dmenu_run -i"
#bindsym $mod+d exec "termite -r bubble -e /home/jomb/src/shell/do_rofi_menu.sh"
# bindsym $mod+d exec "alacritty -e /home/jomb/src/shell/add_to_path/do_rofi_menu.sh"
# bindsym $mod+Shift+d exec "termite -r bubble -e /home/jomb/src/shell/add_to_path/kill-process.sh"
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+backslash split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+c focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        bindsym h resize shrink width 128 px or 128 ppt
        bindsym k resize grow height 128 px or 128 ppt
        bindsym j resize shrink height 128 px or 128 ppt
        bindsym l resize grow width 128 px or 128 ppt

        bindsym Shift+h resize shrink width 512 px or 512 ppt
        bindsym Shift+k resize grow height 512 px or 512 ppt
        bindsym Shift+j resize shrink height 512 px or 512 ppt
        bindsym Shift+l resize grow width 512 px or 512 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 16 px or 16 ppt
        bindsym Down resize grow height 16 px or 16 ppt
        bindsym Up resize shrink height 16 px or 16 ppt
        bindsym Right resize grow width 16 px or 16 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}


focus_follows_mouse no

for_window [window_role="pulsemixer"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [class="Firefox" instance="Browser"] floating enable
# for_window [class="zoom" title="zoom"] floating enable
for_window [title="Network Connections"] floating enable
for_window [title="Network Connections"] move position mouse
for_window [title="Origin"] floating enable

# class                 border  backgr. text    indicator child_border
client.focused          #2e9ef4 #2e9ef4 #ffffff #2e9ef4   #2e9ef4
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

# Defaults
# class                 border  backgr. text    indicator child_border
#client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
#client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
#client.unfocused        #333333 #222222 #888888 #292d2e   #222222
#client.urgent           #2f343a #900000 #ffffff #900000   #900000
#client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c


# I foget what this does
# popup_during_fullscreen smart

# exec_always feh --bg-fill $HOME/media/image/cafe.jpg
exec_always feh --bg-fill $HOME/.config/i3/images/wallhaven-85ox3j.png
exec_always --no-startup-id $HOME/.config/polybar/polybar.sh &

# i3-gaps
gaps inner 8
smart_gaps on
smart_gaps inverse_outer

# I don't remember what smart_borders are
# smart_borders on

# i3-gaps-rounded
# https://github.com/resloved/i3
# Rounded windows
 
# You can also use any non-zero value if you'd like to have a border
# for_window [class=".*"] border pixel 16
# border_radius 16

# I don't use i3status and i3blocks anymore...
# bar {
#     #status_command i3status
#     status_command SCRIPT_DIR=~/.config/i3blocks i3blocks
# }

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

bindsym $mod+r mode "resize"

# bindcode 133 exec "toggle_polybar on"
# bindcode --release 133 exec "toggle_polybar off"
# # 0x60 is backtick (`)
# bindsym $mod+0x60 exec "toggle_polybar keep"

bindsym $mod+o exec "manage_monitors"
bindsym $mod+Shift+o exec "manage_monitors --enable-all"
bindsym $mod+y exec "invoke_clipboard_manager"
bindsym $mod+Shift+y exec "toggle_clipboard_manager"
bindsym $mod+n exec alacritty -e zsh -c "pulsemixer"
bindsym $mod+Shift+f exec "firefox"

bindsym $mod+Shift+p exec "maim -o -s | tee /tmp/snip.png | xclip -selection clipboard -t image/png"
bindsym $mod+p exec "maim -i $(xdotool getactivewindow) | tee /tmp/snip_$(date '+%Y_%m_%d_%H_%M_%S').png | xclip -selection clipboard -t image/png"

bindsym $mod+F1 exec "toggle_mute"
bindsym $mod+F2 exec "change_volume -10"
bindsym $mod+F3 exec "change_volume 10"

bindsym XF86AudioMute exec "toggle_mute"
bindsym XF86AudioLowerVolume exec "change_volume -10"
bindsym XF86AudioRaiseVolume exec "change_volume 10"
bindsym XF86MonBrightnessUp exec "change_brightness 10"
bindsym XF86MonBrightnessDown exec "change_brightness -10"

for_window [urgent=latest] focus

# Need to replace or remove
# bindsym $mod+i exec "termite -e ~/src/shell/forecast.sh --hold"
# bindsym $mod+Shift+i exec "~/src/shell/radar.sh"
# bindsym $mod+n exec "alacritty -e ~/src/shell/toggle-pulsemixer.sh --role pulsemixer --class pulsemixer"
# bindsym $mod+u exec "/home/jomb/src/shell/add_to_path/do_op.sh"
# bindsym $mod+b exec "~/src/shell/toggle-bluetooth-speakers.sh"
# bindsym $alt+h exec "~/src/shell/key.sh h Left"
# bindsym $alt+j exec "~/src/shell/key.sh j Down"
# bindsym $alt+k exec "~/src/shell/key.sh k Up"
# bindsym $alt+l exec "~/src/shell/key.sh l Right"
# bindsym $mod+semicolon exec "~/src/shell/quick-emacs.sh"
# bindsym $mod+apostrophe exec --no-startup-id emacsclient -e "(+org-capture/open-frame nil)"
